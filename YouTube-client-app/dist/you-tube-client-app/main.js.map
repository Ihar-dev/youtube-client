{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/pages/admin-page/admin-page.component.ts","./src/app/auth/pages/admin-page/admin-page.component.html","./src/app/auth/pages/login/login.component.ts","./src/app/auth/pages/login/login.component.html","./src/app/auth/services/admin.service.ts","./src/app/auth/services/login.service.ts","./src/app/core/components/header/header.component.ts","./src/app/core/components/header/header.component.html","./src/app/core/components/not-found/not-found.component.ts","./src/app/core/components/not-found/not-found.component.html","./src/app/core/components/sorting-bar/sorting-bar.component.ts","./src/app/core/components/sorting-bar/sorting-bar.component.html","./src/app/core/core.module.ts","./src/app/core/services/header-bar.service.ts","./src/app/material/material.module.ts","./src/app/redux/actions/creator.actions.ts","./src/app/redux/effects/app.effects.ts","./src/app/redux/reducers/creator.reducer.ts","./src/app/redux/reducers/index.ts","./src/app/redux/selectors/creator.selectors.ts","./src/app/youtube/directives/get-border-color.directive.ts","./src/app/youtube/guards/main.guard.ts","./src/app/youtube/pages/main/detailed/detailed.component.ts","./src/app/youtube/pages/main/detailed/detailed.component.html","./src/app/youtube/pages/main/search-item/search-item.component.ts","./src/app/youtube/pages/main/search-item/search-item.component.html","./src/app/youtube/pages/main/search-results/search-results.component.ts","./src/app/youtube/pages/main/search-results/search-results.component.html","./src/app/youtube/services/detailed.service.ts","./src/app/youtube/services/http-interceptor.service.ts","./src/app/youtube/services/searching.service.ts","./src/app/youtube/services/sorting.service.ts","./src/app/youtube/youtube-routing.module.ts","./src/app/youtube/youtube.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { YoutubeModule } from './youtube/youtube.module';\r\n\r\nimport { NotFoundComponent } from './core/components/not-found/not-found.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: '**', component: NotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { useHash: true }),\r\n    AuthModule,\r\n    YoutubeModule,\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import {\r\n  Component,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  public title: string;\r\n\r\n  constructor() {\r\n    this.title = 'YouTube-client-app';\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<app-sorting-bar></app-sorting-bar>\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { CoreModule } from './core/core.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './core/components/header/header.component';\r\nimport { SortingBarComponent } from './core/components/sorting-bar/sorting-bar.component';\r\nimport { reducers, metaReducers } from './redux/reducers';\r\nimport { environment } from '../environments/environment';\r\nimport { AppEffects } from './redux/effects/app.effects';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    SortingBarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    StoreModule.forRoot(reducers, {\r\n      metaReducers,\r\n    }),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\r\n    EffectsModule.forRoot([AppEffects]),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MainGuard } from '../youtube/guards/main.guard';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { AdminPageComponent } from './pages/admin-page/admin-page.component';\r\n\r\nconst authRoutes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'admin', component: AdminPageComponent, canActivate: [MainGuard] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(authRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { MaterialModule } from '../material/material.module';\r\nimport { AdminPageComponent } from './pages/admin-page/admin-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    AdminPageComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    LoginComponent,\r\n  ],\r\n})\r\n\r\nexport class AuthModule { }\r\n","import {\r\n  Component,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  AbstractControl,\r\n} from '@angular/forms';\r\n\r\nimport {\r\n  Router,\r\n} from '@angular/router';\r\n\r\nimport {\r\n  LoginService,\r\n} from '../../services/login.service';\r\n\r\nimport { AdminService } from '../../services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-page',\r\n  templateUrl: './admin-page.component.html',\r\n  styleUrls: ['./admin-page.component.scss'],\r\n})\r\nexport class AdminPageComponent implements OnInit {\r\n  public readonly loginService: LoginService;\r\n  private readonly adminService: AdminService;\r\n  public cardForm: FormGroup;\r\n\r\n  constructor(loginService: LoginService, private router: Router, adminService: AdminService) {\r\n    this.loginService = loginService;\r\n    this.adminService = adminService;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cardForm = new FormGroup({\r\n      userTitle: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        Validators.maxLength(20),\r\n      ]),\r\n      userDescription: new FormControl('', [\r\n        Validators.maxLength(255),\r\n      ]),\r\n      userImg: new FormControl('', [\r\n        Validators.pattern(/(http|https):\\/\\/([\\w.]+\\/?)\\S*/),\r\n      ]),\r\n      userVideo: new FormControl('', [\r\n        Validators.pattern(/(http|https):\\/\\/([\\w.]+\\/?)\\S*/),\r\n      ]),\r\n      userDate: new FormControl('', [\r\n        this.inputDateValidator,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  private inputDateValidator(control: AbstractControl): { [key: string]: boolean } | null {\r\n    const dateNow = new Date();\r\n    const inputDate = new Date(control.value);\r\n    if (dateNow.getUTCDate() < inputDate.getUTCDate()) return { forbiddenDate: true };\r\n    return null;\r\n  }\r\n\r\n  public get userTitle(): AbstractControl | null {\r\n    return this.cardForm.get('userTitle');\r\n  }\r\n\r\n  public submitForm(\r\n    userTitle: string,\r\n    isUserTitleInvalid: boolean,\r\n    userDescription: string,\r\n    isUserDescriptionInvalid: boolean,\r\n    userImg: string,\r\n    isUserImgInvalid: boolean,\r\n    userVideo: string,\r\n    isUserVideoInvalid: boolean,\r\n    userDate: string,\r\n    isUserDateInvalid: boolean,\r\n  ): void {\r\n    if (isUserTitleInvalid || isUserDescriptionInvalid || isUserImgInvalid || isUserVideoInvalid || isUserDateInvalid) return;\r\n    this.adminService.addNewCard(userTitle, userDescription, userImg, userVideo, userDate);\r\n    this.router.navigate(['/main']);\r\n  }\r\n}\r\n","<div class=\"admin-container\">\r\n  <p>Create new card</p>\r\n  <form class=\"example-form\" [formGroup]=\"cardForm\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Title</mat-label>\r\n      <mat-hint>Please enter a title</mat-hint>\r\n      <input type=\"text\" matInput required #titleInput name=\"title\" formControlName=\"userTitle\">\r\n    </mat-form-field>\r\n    <div *ngIf=\"cardForm.controls['userTitle'].invalid && cardForm.controls['userTitle'].dirty\">\r\n      <span *ngIf=\"userTitle!.errors?.['required']\">The title is required</span>\r\n      <span *ngIf=\"userTitle!.errors?.['minlength']\">The title is too short</span>\r\n      <span *ngIf=\"!userTitle!.errors?.['required'] && !userTitle!.errors?.['minlength']\">The title is too long</span>\r\n    </div>\r\n  </form>\r\n  <form class=\"example-form\" [formGroup]=\"cardForm\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Description</mat-label>\r\n      <mat-hint>Please enter a description</mat-hint>\r\n      <textarea type=\"text\" matInput #descriptionInput name=\"description\" formControlName=\"userDescription\"></textarea>\r\n    </mat-form-field>\r\n    <div *ngIf=\"cardForm.controls['userDescription'].invalid && cardForm.controls['userDescription'].dirty\">\r\n      The description is too long\r\n    </div>\r\n  </form>\r\n  <form class=\"example-form\" [formGroup]=\"cardForm\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Img</mat-label>\r\n      <mat-hint>Please enter a link to the image</mat-hint>\r\n      <input type=\"text\" matInput required #imgInput name=\"img\" formControlName=\"userImg\">\r\n    </mat-form-field>\r\n    <div *ngIf=\"cardForm.controls['userImg'].invalid && cardForm.controls['userImg'].dirty\">\r\n      The image link is invalid\r\n    </div>\r\n  </form>\r\n  <form class=\"example-form\" [formGroup]=\"cardForm\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Video link</mat-label>\r\n      <mat-hint>Please enter a link to the video</mat-hint>\r\n      <input type=\"text\" matInput required #videoInput name=\"video\" formControlName=\"userVideo\">\r\n    </mat-form-field>\r\n    <div *ngIf=\"cardForm.controls['userVideo'].invalid && cardForm.controls['userVideo'].dirty\">\r\n      The video link is invalid\r\n    </div>\r\n  </form>\r\n  <form class=\"example-form\" [formGroup]=\"cardForm\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>Creation date</mat-label>\r\n      <mat-hint>Please enter a creation date</mat-hint>\r\n      <input type=\"date\" matInput required #dateInput name=\"date\" formControlName=\"userDate\">\r\n    </mat-form-field>\r\n    <div *ngIf=\"cardForm.controls['userDate'].invalid && cardForm.controls['userDate'].dirty\">\r\n      The date is invalid\r\n    </div>\r\n  </form>\r\n  <button class=\"admin-container__admin-button\" (click)=\"submitForm(titleInput.value, cardForm.controls['userTitle'].invalid\r\n  , descriptionInput.value, cardForm.controls['userDescription'].invalid\r\n  , imgInput.value, cardForm.controls['userImg'].invalid\r\n  , videoInput.value, cardForm.controls['userVideo'].invalid\r\n  , dateInput.value, cardForm.controls['userDate'].invalid)\" title=\"Submit\"></button>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  Router,\r\n} from '@angular/router';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\nimport {\r\n  LoginService,\r\n} from '../../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  public readonly loginService: LoginService;\r\n  public readonly myForm: FormGroup;\r\n\r\n  constructor(loginService: LoginService, private router: Router) {\r\n    this.loginService = loginService;\r\n    this.myForm = new FormGroup({\r\n      userName: new FormControl('', Validators.email),\r\n      userPassword: new FormControl('', [\r\n        Validators.minLength(8),\r\n        Validators.pattern(/(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])/),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.loginService.getUserName()) this.router.navigate(['/main']);\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <p>Login</p>\r\n  <form class=\"example-form\" [formGroup]=\"myForm\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>login</mat-label>\r\n      <mat-hint>Please enter a login email</mat-hint>\r\n      <input type=\"email\" matInput required #nameInput name=\"name\" formControlName=\"userName\">\r\n    </mat-form-field>\r\n    <div *ngIf=\"myForm.controls['userName'].invalid && myForm.controls['userName'].touched\">\r\n      The login email is invalid\r\n    </div>\r\n  </form>\r\n  <form class=\"example-form\" [formGroup]=\"myForm\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n      <mat-label>password</mat-label>\r\n      <mat-hint>Please enter a password</mat-hint>\r\n      <input type=\"password\" matInput required #passwordInput name=\"password\" formControlName=\"userPassword\">\r\n    </mat-form-field>\r\n    <div *ngIf=\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\">\r\n      Your password isn't strong enough\r\n    </div>\r\n    <div *ngIf=\"myForm.controls['userPassword'].invalid && myForm.controls['userPassword'].touched\">\r\n      &bull;at least 8 characters<br>\r\n      &bull;a mixture of both uppercase and lowercase letters<br>\r\n      &bull;a mixture of letters and numbers<br>\r\n      &bull;inclusion of at least one special character, e.g., ! @ # ? ]\r\n    </div>\r\n  </form>\r\n  <button class=\"login-container__login-button\" (click)=\"loginService.setUser(nameInput.value, passwordInput.value,\r\n  myForm.controls['userName'].invalid, myForm.controls['userPassword'].invalid)\" title=\"log in\"></button>\r\n</div>\r\n","import {\r\n  Injectable,\r\n} from '@angular/core';\r\nimport {\r\n  Store,\r\n} from '@ngrx/store';\r\n\r\nimport {\r\n  addCustomCard,\r\n} from '../../redux/actions/creator.actions';\r\nimport {\r\n  SearchItem,\r\n} from '../../youtube/models/search-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminService {\r\n  constructor(private store: Store) {}\r\n\r\n  public addNewCard(userTitle: string, userDescription: string, userImg: string, userVideo: string, userDate: string): void {\r\n    const item: SearchItem = this.getDefaultItem();\r\n    item.snippet.title = userTitle;\r\n    item.snippet.description = userDescription;\r\n    item.snippet.thumbnails.medium.url = userImg;\r\n    item.snippet.thumbnails.maxres.url = userImg;\r\n    item.snippet.publishedAt = userDate;\r\n    item.id = 'custom';\r\n    item.etag = userVideo;\r\n    this.store.dispatch(addCustomCard(item));\r\n  }\r\n\r\n  private getDefaultItem(): SearchItem {\r\n    return {\r\n      kind: '',\r\n      etag: '',\r\n      id: '',\r\n      snippet: {\r\n        publishedAt: '',\r\n        channelId: '',\r\n        title: '',\r\n        description: '',\r\n        thumbnails: {\r\n          default: {\r\n            url: '',\r\n            width: 0,\r\n            height: 0,\r\n          },\r\n          medium: {\r\n            url: '',\r\n            width: 0,\r\n            height: 0,\r\n          },\r\n          high: {\r\n            url: '',\r\n            width: 0,\r\n            height: 0,\r\n          },\r\n          standard: {\r\n            url: '',\r\n            width: 0,\r\n            height: 0,\r\n          },\r\n          maxres: {\r\n            url: '',\r\n            width: 0,\r\n            height: 0,\r\n          },\r\n        },\r\n        channelTitle: '',\r\n        tags: [],\r\n        categoryId: '',\r\n        liveBroadcastContent: '',\r\n        localized: {\r\n          title: '',\r\n          description: '',\r\n        },\r\n        defaultAudioLanguage: '',\r\n      },\r\n      statistics: {\r\n        viewCount: '0',\r\n        likeCount: '0',\r\n        favoriteCount: '0',\r\n        commentCount: '0',\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { AppAuthorizationModel } from '../models/youtube-app-authorization.model';\r\n\r\nenum AuthSettings {\r\n  tokenLength = 25,\r\n  tokenPossibleSymbols = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class LoginService {\r\n  private authorization: AppAuthorizationModel;\r\n  public loggedIn$ = new Subject < boolean >();\r\n\r\n  constructor(private router: Router) {\r\n    if (localStorage.getItem('youtube-app-authorization')) {\r\n      this.authorization = JSON.parse(localStorage.getItem('youtube-app-authorization') || '');\r\n    } else this.authorization = this.getDefault();\r\n  }\r\n\r\n  public getUserName(): string {\r\n    return this.authorization.userName;\r\n  }\r\n\r\n  public setUser(userName: string, password: string, isUserNameInvalid: boolean, isUserPasswordInvalid: boolean): void {\r\n    if (isUserNameInvalid || isUserPasswordInvalid) return;\r\n    this.authorization.userName = userName;\r\n    this.authorization.password = password;\r\n    let text = '';\r\n    for (let i = 0; i < AuthSettings.tokenLength; i++) {\r\n      text += AuthSettings.tokenPossibleSymbols.charAt(Math.floor(Math.random() * AuthSettings.tokenPossibleSymbols.length));\r\n    }\r\n    this.authorization.token = text;\r\n    localStorage.setItem('youtube-app-authorization', JSON.stringify(this.authorization));\r\n    this.router.navigate(['/main']);\r\n    this.loggedIn$.next(true);\r\n  }\r\n\r\n  public resetUser(): void {\r\n    this.authorization = this.getDefault();\r\n    localStorage.setItem('youtube-app-authorization', '');\r\n    this.router.navigate(['/login']);\r\n    this.loggedIn$.next(false);\r\n  }\r\n\r\n  private getDefault(): AppAuthorizationModel {\r\n    return {\r\n      userName: '',\r\n      token: '',\r\n      password: '',\r\n    };\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { LoginService } from '../../../auth/services/login.service';\r\nimport { HeaderBarService } from '../../services/header-bar.service';\r\nimport { SearchingService } from '../../../youtube/services/searching.service';\r\n\r\nimport { HeaderBarModel } from '../../models/header-bar.model';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  public readonly loginService: LoginService;\r\n  private readonly headerBarService: HeaderBarService;\r\n  private readonly searchingService: SearchingService;\r\n  public headerBarConditions: HeaderBarModel;\r\n  private loggedInSubs: Subscription;\r\n  public logTitle: string;\r\n  public dataForSearch: string;\r\n\r\n  constructor(\r\n    loginService: LoginService,\r\n    headerBarService: HeaderBarService,\r\n    searchingService: SearchingService,\r\n    private router: Router,\r\n  ) {\r\n    this.loginService = loginService;\r\n    this.searchingService = searchingService;\r\n    this.headerBarConditions = headerBarService.headerBarConditions;\r\n    this.headerBarService = headerBarService;\r\n    (this.loginService.getUserName()) ? this.logTitle = 'log out' : this.logTitle = 'log in';\r\n  }\r\n\r\n  public getUserName(): string {\r\n    return (this.loginService.getUserName()) ? this.loginService.getUserName() : 'not authorized';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedInSubs = this.loginService.loggedIn$.subscribe((loggedIn: boolean): void => {\r\n      (loggedIn) ? this.logTitle = 'log out' : this.logTitle = 'log in';\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loggedInSubs.unsubscribe();\r\n  }\r\n\r\n  public toggleSortingBar(): void {\r\n    this.headerBarConditions.SortingBarView = !this.headerBarConditions.SortingBarView;\r\n  }\r\n\r\n  public makeSearch(): void {\r\n    if (!this.loginService.getUserName() || !this.dataForSearch || this.dataForSearch.length < 3) return;\r\n    this.searchingService.handleSearch(this.dataForSearch);\r\n  }\r\n\r\n  public openNewCardForm(): void {\r\n    if (this.loginService.getUserName()) this.router.navigate(['/admin']);\r\n  }\r\n}\r\n","<div class=\"header__container\">\r\n  <div class=\"header__search-container\">\r\n    <button class=\"header__logo\" title=\"Create New Card\" (click)=\"openNewCardForm()\"></button>\r\n    <input id=\"header__search-input\" type=\"text\" placeholder=\"What are you want to find out?\" [(ngModel)]=\"dataForSearch\" (input)=\"makeSearch()\">\r\n    <button class=\"header__search-settings-button\" (click)=\"toggleSortingBar()\" title=\"settings\"></button>\r\n  </div>\r\n  <div class=\"header__user-container\">\r\n    <p>{{ getUserName() }}</p>\r\n    <button class=\"header__user-logo\" (click)=\"loginService.resetUser()\" [title]=\"logTitle\"></button>\r\n  </div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss'],\r\n})\r\nexport class NotFoundComponent {\r\n}\r\n","<div></div>\r\n","import {\r\n  Component,\r\n} from '@angular/core';\r\n\r\nimport { HeaderBarService } from '../../services/header-bar.service';\r\n\r\nimport { HeaderBarModel } from '../../models/header-bar.model';\r\n\r\n@Component({\r\n  selector: 'app-sorting-bar',\r\n  templateUrl: './sorting-bar.component.html',\r\n  styleUrls: ['./sorting-bar.component.scss'],\r\n})\r\nexport class SortingBarComponent {\r\n  private readonly headerBarService: HeaderBarService;\r\n  public viewsSortingOrder: string;\r\n  public publishedAtSortingOrder: string;\r\n  public filterSentence: string;\r\n  public headerBarConditions: HeaderBarModel;\r\n\r\n  constructor(headerBarService: HeaderBarService) {\r\n    this.headerBarService = headerBarService;\r\n    this.viewsSortingOrder = 'increasing';\r\n    this.publishedAtSortingOrder = 'increasing';\r\n    this.filterSentence = '';\r\n    this.headerBarConditions = headerBarService.headerBarConditions;\r\n  }\r\n\r\n  public makeSentenceFilter(): void {\r\n    this.headerBarService.changeFilterSentence(this.filterSentence);\r\n  }\r\n\r\n  public makeSortingByViewsCount(): void {\r\n    (this.viewsSortingOrder === 'increasing') ? this.viewsSortingOrder = 'decreasing' : this.viewsSortingOrder = 'increasing';/* eslint-disable-line */\r\n    this.decorateText('sorting by views count');\r\n    this.headerBarService.changeViewsSortingOrder(this.viewsSortingOrder);\r\n  }\r\n\r\n  public makeSortingByPublishedAt(): void {\r\n    (this.publishedAtSortingOrder === 'increasing') ? this.publishedAtSortingOrder = 'decreasing' : this.publishedAtSortingOrder = 'increasing';/* eslint-disable-line */\r\n    this.decorateText('sorting by published at');\r\n    this.headerBarService.changePublishedAtSortingOrder(this.publishedAtSortingOrder);\r\n  }\r\n\r\n  private decorateText(text: string): void {\r\n    const sortingButtons: NodeListOf < HTMLElement > | null = document.querySelectorAll('.header__sorting-button');\r\n    if (sortingButtons.length) {\r\n      switch (text) {\r\n        case 'sorting by views count':\r\n          sortingButtons[0].style.textDecoration = 'none';\r\n          sortingButtons[1].style.textDecoration = 'underline';\r\n          break;\r\n        case 'sorting by published at':\r\n          sortingButtons[0].style.textDecoration = 'underline';\r\n          sortingButtons[1].style.textDecoration = 'none';\r\n          break;\r\n        default:\r\n          sortingButtons.forEach(elem => elem.style.textDecoration = 'none');/* eslint-disable-line */\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"header__sorting-bar-container\" [class.active]=\"headerBarConditions.SortingBarView\">\r\n  <div class=\"header__sorting-inner-container\">\r\n    <p class=\"header__sorting-naming\">Sorting by:</p>\r\n    <p class=\"header__sorting-button\" (click)=\"makeSortingByPublishedAt()\">date</p>\r\n    <p class=\"header__sorting-button\" (click)=\"makeSortingByViewsCount()\">count of views</p>\r\n    <p class=\"header__filter-naming\" [class.underline-text]=\"filterSentence\">by word or sentence</p>\r\n    <input type=\"text\" [(ngModel)]=\"filterSentence\" (input)=\"makeSentenceFilter()\">\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotFoundComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { HeaderBarModel } from '../models/header-bar.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class HeaderBarService {\r\n  public headerBarConditions: HeaderBarModel;\r\n  public viewsSortingOrder$ = new Subject < string >();\r\n  public publishedAtSortingOrder$ = new Subject < string >();\r\n  public filterSentence$ = new Subject < string >();\r\n\r\n  constructor() {\r\n    this.headerBarConditions = {\r\n      SortingBarView: false,\r\n    };\r\n  }\r\n\r\n  public changeViewsSortingOrder(viewsSortingOrder: string): void {\r\n    this.viewsSortingOrder$.next(viewsSortingOrder);\r\n  }\r\n\r\n  public changePublishedAtSortingOrder(publishedAtSortingOrder: string): void {\r\n    this.publishedAtSortingOrder$.next(publishedAtSortingOrder);\r\n  }\r\n\r\n  public changeFilterSentence(filterSentence: string): void {\r\n    this.filterSentence$.next(filterSentence);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nconst MaterialComponents = [\r\n  MatSliderModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: MaterialComponents,\r\n  exports: MaterialComponents,\r\n})\r\nexport class MaterialModule { }\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nimport { SearchItem } from '../../youtube/models/search-item.model';\r\n\r\nconst addCustomCard = createAction(\r\n  '[Creator] Add card',\r\n  (item: SearchItem) => item,\r\n);\r\n\r\nconst addSearchItems = createAction(\r\n  '[Creator] Add search cards',\r\n  props<{ data: SearchItem [] }>(),\r\n);\r\n\r\nexport { addCustomCard, addSearchItems };\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions } from '@ngrx/effects';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n  constructor(private actions$: Actions) {}\r\n}\r\n","/* eslint-disable ngrx/on-function-explicit-return-type */\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nimport { CreatorStateModel } from '../state.models';\r\nimport { addCustomCard, addSearchItems } from '../actions/creator.actions';\r\n\r\nconst initialState: CreatorStateModel = {\r\n  customCards: [],\r\n  searchItems: [],\r\n};\r\n\r\nconst creatorReducer = createReducer(\r\n  initialState,\r\n  on(addCustomCard, (state, item) => ({\r\n    ...state,\r\n    customCards: [...JSON.parse(JSON.stringify(state.customCards)), item],\r\n  })),\r\n  on(addSearchItems, (state, { data }) => ({\r\n    ...state,\r\n    searchItems: data,\r\n  })),\r\n);\r\n\r\nexport { creatorReducer };\r\n","import {\r\n  ActionReducerMap,\r\n  MetaReducer,\r\n} from '@ngrx/store';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { creatorReducer } from './creator.reducer';\r\nimport { CreatorStateModel } from '../state.models';\r\n\r\nexport interface State {\r\n  creator: CreatorStateModel,\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  creator: creatorReducer,\r\n};\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\r\n","import {\r\n  createFeatureSelector,\r\n  createSelector,\r\n} from '@ngrx/store';\r\nimport {\r\n  CreatorStateModel,\r\n} from '../state.models';\r\n\r\nconst selectCreatorState = createFeatureSelector < CreatorStateModel >('creator');\r\nconst selectItemsState = createSelector(\r\n  selectCreatorState,\r\n  (state: CreatorStateModel) => state,\r\n);\r\n\r\nexport { selectCreatorState, selectItemsState };\r\n","import {\r\n  Directive, ElementRef, OnInit, Input,\r\n} from '@angular/core';\r\n\r\nenum Settings {\r\n  sevenDaysDuration = 1000 * 60 * 60 * 24 * 7,\r\n}\r\n\r\n@Directive({\r\n  selector: '[appGetBorderColor]',\r\n})\r\nexport class GetBorderColorDirective implements OnInit {\r\n  @Input() public appGetBorderColor = '';\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.el = el;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const dateNow = new Date();\r\n    const itemDate = new Date(this.appGetBorderColor);\r\n    if (Number(dateNow) - Number(itemDate) < Settings.sevenDaysDuration) {\r\n      this.el.nativeElement.style.borderBottom = 'solid 5px blue';\r\n    } else {\r\n      const monthDifference = (dateNow.getUTCFullYear() * 12 + dateNow.getUTCMonth())\r\n      - (itemDate.getUTCFullYear() * 12 + itemDate.getUTCMonth());\r\n      if (monthDifference <= 1) {\r\n        if (!monthDifference) {\r\n          this.el.nativeElement.style.borderBottom = 'solid 5px green';\r\n          return;\r\n        }\r\n        if (dateNow.getUTCDate() < itemDate.getUTCDate()) {\r\n          this.el.nativeElement.style.borderBottom = 'solid 5px green';\r\n          return;\r\n        }\r\n      }\r\n      if (monthDifference <= 6) {\r\n        if (monthDifference < 6) {\r\n          this.el.nativeElement.style.borderBottom = 'solid 5px yellow';\r\n          return;\r\n        }\r\n        if (dateNow.getUTCDate() < itemDate.getUTCDate()) {\r\n          this.el.nativeElement.style.borderBottom = 'solid 5px yellow';\r\n          return;\r\n        }\r\n      }\r\n      this.el.nativeElement.style.borderBottom = 'solid 5px red';\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  CanActivate, UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LoginService } from '../../auth/services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MainGuard implements CanActivate {\r\n  constructor(private readonly loginService: LoginService) {}\r\n\r\n  canActivate(): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.loginService.getUserName()) return true;\r\n    alert('You are not authorized yet!');/* eslint-disable-line */\r\n    return false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { DetailedService } from '../../../services/detailed.service';\r\n\r\n@Component({\r\n  selector: 'app-detailed',\r\n  templateUrl: './detailed.component.html',\r\n  styleUrls: ['./detailed.component.scss'],\r\n})\r\nexport class DetailedComponent {\r\n  public readonly detailedService: DetailedService;\r\n  public id: string;\r\n\r\n  constructor(detailedService: DetailedService, public router: Router) {\r\n    this.detailedService = detailedService;\r\n    this.id = this.detailedService.item.id;\r\n  }\r\n}\r\n","<button class=\"detailed__back-button\" (click)=\"router.navigate(['/main'])\"></button>\r\n<div class=\"detailed-container\">\r\n  <div class=\"detailed-image\"\r\n    [style.backgroundImage]=\"'url(' + detailedService.item.snippet.thumbnails.maxres.url + ')'\"></div>\r\n  <div class=\"detailed-description-cont\" [appGetBorderColor]=\"detailedService.item.snippet.publishedAt\">\r\n    <div class=\"detailed-header-cont\">\r\n      <div class=\"detailed-title\">{{ detailedService.item.snippet.title }}</div>\r\n      <p class=\"detailed-date\">{{ detailedService.item.snippet.publishedAt | date : 'fullDate'}}</p>\r\n    </div>\r\n    <p>Description:</p>\r\n    <div class=\"detailed-description\">{{ detailedService.item.snippet.description }}</div>\r\n    <div class=\"detailed__statistics-container\">\r\n      <div class=\"detailed__statistics-item\">\r\n        <div class=\"detailed__statistics-viewCount-image\"></div>\r\n        <div>{{ detailedService.item.statistics.viewCount }}</div>\r\n      </div>\r\n      <div class=\"detailed__statistics-item\">\r\n        <div class=\"detailed__statistics-likeCount-image\"></div>\r\n        <div>{{ detailedService.item.statistics.likeCount }}</div>\r\n      </div>\r\n      <div class=\"detailed__statistics-item\">\r\n        <div class=\"detailed__statistics-commentCount-image\"></div>\r\n        <div>{{ detailedService.item.statistics.commentCount }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { DetailedService } from '../../../services/detailed.service';\r\n\r\nimport { SearchItem } from '../../../models/search-item.model';\r\n\r\n@Component({\r\n  selector: 'app-search-item',\r\n  templateUrl: './search-item.component.html',\r\n  styleUrls: ['./search-item.component.scss'],\r\n})\r\nexport class SearchItemComponent {\r\n  @Input() public item: SearchItem;\r\n  private readonly detailedService: DetailedService;\r\n\r\n  constructor(private router: Router, detailedService: DetailedService) {\r\n    this.detailedService = detailedService;\r\n  }\r\n\r\n  public showItemDetailed(): void {\r\n    this.detailedService.item = this.item;\r\n    const route = `main/${this.item.id}/detailed`;\r\n    this.router.navigate([route]);\r\n  }\r\n}\r\n","<div class=\"search__item-container\" [appGetBorderColor] = \"item.snippet.publishedAt\">\r\n    <div class=\"search__thumbnail-image\" [style.backgroundImage]=\"'url(' + item.snippet.thumbnails.medium.url + ')'\">\r\n    </div>\r\n    <div class=\"search__statistics-container\">\r\n      <div class=\"search__statistics-item\">\r\n        <div class=\"search__statistics-viewCount-image\"></div>\r\n        <div>{{ item.statistics.viewCount }}</div>\r\n      </div>\r\n      <div class=\"search__statistics-item\">\r\n        <div class=\"search__statistics-likeCount-image\"></div>\r\n        <div>{{ item.statistics.likeCount }}</div>\r\n      </div>\r\n      <div class=\"search__statistics-item\">\r\n        <div class=\"search__statistics-commentCount-image\"></div>\r\n        <div>{{ item.statistics.commentCount }}</div>\r\n      </div>\r\n    </div>\r\n    <p>{{ item.snippet.publishedAt | date}}</p>\r\n    <div class=\"search__item-title\">{{ item.snippet.title }}</div>\r\n    <button class=\"search__item-more-button\" (click)=\"showItemDetailed()\"></button>\r\n  </div>\r\n\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { SortingService } from '../../../services/sorting.service';\r\nimport { HeaderBarService } from '../../../../core/services/header-bar.service';\r\nimport { SearchItem } from '../../../models/search-item.model';\r\nimport { HeaderBarModel } from '../../../../core/models/header-bar.model';\r\nimport { selectItemsState } from '../../../../redux/selectors/creator.selectors';\r\nimport { CreatorStateModel } from '../../../../redux/state.models';\r\n\r\n@Component({\r\n  selector: 'app-search-results',\r\n  templateUrl: './search-results.component.html',\r\n  styleUrls: ['./search-results.component.scss'],\r\n})\r\nexport class SearchResultsComponent implements OnInit, OnDestroy {\r\n  private readonly sortingService: SortingService;\r\n  private readonly headerBarService: HeaderBarService;\r\n  public headerBarConditions: HeaderBarModel;\r\n  private viewsSortingOrderSubs: Subscription;\r\n  private publishedAtSortingOrderSubs: Subscription;\r\n  private filterSentenceSubs: Subscription;\r\n  public items: SearchItem[];\r\n  private cards$: Observable < CreatorStateModel >;\r\n  private cardsSubs: Subscription;\r\n\r\n  constructor(\r\n    headerBarService: HeaderBarService,\r\n    sortingService: SortingService,\r\n    store: Store,\r\n  ) {\r\n    this.sortingService = sortingService;\r\n    this.headerBarService = headerBarService;\r\n    this.headerBarConditions = headerBarService.headerBarConditions;\r\n    this.cards$ = store.select(selectItemsState);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.cardsSubs = this.cards$.subscribe((data: CreatorStateModel): void => {\r\n      this.items = [...data.customCards, ...data.searchItems];\r\n      this.sortingService.items = this.items;\r\n      console.log(this.items);\r\n    });\r\n\r\n    this.viewsSortingOrderSubs = this.headerBarService.viewsSortingOrder$.subscribe((viewsSortingOrder): void => {\r\n      this.sortingService.handleViewsSortingOrderChange(viewsSortingOrder);\r\n    });\r\n\r\n    this.publishedAtSortingOrderSubs = this.headerBarService.publishedAtSortingOrder$.subscribe(\r\n      (publishedAtSortingOrder): void => {\r\n        this.sortingService.handlePublishedAtSortingOrderChange(publishedAtSortingOrder);\r\n      },\r\n    );\r\n\r\n    this.filterSentenceSubs = this.headerBarService.filterSentence$.subscribe((filterSentence): void => {\r\n      this.sortingService.filterBySentence(filterSentence);\r\n      this.items = this.sortingService.items;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewsSortingOrderSubs.unsubscribe();\r\n    this.publishedAtSortingOrderSubs.unsubscribe();\r\n    this.filterSentenceSubs.unsubscribe();\r\n    this.cardsSubs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"search__search-container\" [class.sorting-bar-display]=\"headerBarConditions.SortingBarView\">\r\n  <div class=\"search__inner-search-container\">\r\n    <app-search-item *ngFor=\"let item of items\" [item]=\"item\"></app-search-item>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { SearchItem } from '../models/search-item.model';\r\n\r\ntype ThumbNailType = {\r\n  url: string,\r\n  width: number,\r\n  height: number,\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DetailedService {\r\n  public item: SearchItem;\r\n\r\n  constructor() {\r\n    this.item = this.getDefaultItem();\r\n  }\r\n\r\n  private getDefaultItem(): SearchItem {\r\n    const defaultThumbNail: ThumbNailType = {\r\n      url: '',\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n\r\n    return {\r\n      kind: '',\r\n      etag: '',\r\n      id: '',\r\n      snippet: {\r\n        publishedAt: '',\r\n        channelId: '',\r\n        title: '',\r\n        description: '',\r\n        thumbnails: {\r\n          default: defaultThumbNail,\r\n          medium: defaultThumbNail,\r\n          high: defaultThumbNail,\r\n          standard: defaultThumbNail,\r\n          maxres: defaultThumbNail,\r\n        },\r\n        channelTitle: '',\r\n        tags: [''],\r\n        categoryId: '',\r\n        liveBroadcastContent: '',\r\n        localized: {\r\n          title: '',\r\n          description: '',\r\n        },\r\n        defaultAudioLanguage: '',\r\n      },\r\n      statistics: {\r\n        viewCount: '',\r\n        likeCount: '',\r\n        favoriteCount: '',\r\n        commentCount: '',\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpRequest, HttpHandler, HttpParams,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nenum Settings {\r\n  APIUrl = 'https://www.googleapis.com/youtube/v3/',\r\n  key = 'AIzaSyAWpNsq0IfVimHbVnIeNAEpT883uTazfvk',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable < HttpEvent < any > > {\r\n    const newReq = req.clone({\r\n      url: Settings.APIUrl + req.url,\r\n      params: (req.params ? req.params : new HttpParams())\r\n        .set('key', Settings.key),\r\n    });\r\n\r\n    return next.handle(newReq);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { debounceTime, mergeMap, map } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { addSearchItems } from '../../redux/actions/creator.actions';\r\n\r\nimport { SortingService } from './sorting.service';\r\n\r\nimport { SearchResponse } from '../models/search-response.model';\r\nimport { PreliminarySearchItem } from '../models/preliminary-search-item.model';\r\nimport { SearchItem } from '../models/search-item.model';\r\n\r\nenum Settings {\r\n  maxResults = '12',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchingService {\r\n  private readonly sortingService: SortingService;\r\n  private readonly store: Store;\r\n  private cacheItems: {\r\n    [key: string]: SearchItem[],\r\n  };\r\n  private keyInput$ = new Subject < string >();\r\n\r\n  constructor(sortingService: SortingService, private httpClient: HttpClient, store: Store) {\r\n    this.sortingService = sortingService;\r\n    this.store = store;\r\n    if (localStorage.getItem('youtube-app-cache-items')) {\r\n      this.cacheItems = JSON.parse(localStorage.getItem('youtube-app-cache-items') || '');\r\n    } else this.cacheItems = {};\r\n    this.keyInput$.pipe(debounceTime(1000)).subscribe(dataForSearch => this.mergeMapSearch(dataForSearch));\r\n  }\r\n\r\n  public async handleSearch(dataForSearch: string): Promise < void > {\r\n    if (this.cacheItems[dataForSearch]) {\r\n      this.sortingService.items = this.cacheItems[dataForSearch];\r\n      this.tempItems();\r\n    } else this.keyInput$.next(dataForSearch);\r\n  }\r\n\r\n  private tempItems(): void {\r\n    this.sortingService.tempItems = this.sortingService.items;\r\n    const sortingButtons: NodeListOf < HTMLElement > | null = document.querySelectorAll('.header__sorting-button');\r\n    if (sortingButtons.length) sortingButtons.forEach(elem => elem.style.textDecoration = 'none'); /* eslint-disable-line */\r\n  }\r\n\r\n  private mergeMapSearch(dataForSearch: string): void {\r\n    this.httpClient.get('search', {\r\n      params: new HttpParams()\r\n        .set('type', 'video')\r\n        .set('part', 'snippet')\r\n        .set('maxResults', Settings.maxResults)\r\n        .set('q', dataForSearch),\r\n    }).pipe(\r\n      map(\r\n        (response: any) => {\r\n          const searchData: SearchResponse < PreliminarySearchItem > = response;\r\n          let dataForSecondRequest = '';\r\n          searchData.items.forEach((el, index) => {\r\n            (index) ? dataForSecondRequest += `,${el.id.videoId}` : dataForSecondRequest += el.id.videoId;\r\n          });\r\n          return dataForSecondRequest;\r\n        },\r\n      ),\r\n      mergeMap(dataForSecondRequest => this.httpClient.get('videos', {\r\n        params: new HttpParams()\r\n          .set('id', dataForSecondRequest)\r\n          .set('part', 'snippet,statistics'),\r\n      })),\r\n    ).subscribe((response: any) => {\r\n      const searchData: SearchResponse < SearchItem > = response;\r\n      const data: SearchItem[] = searchData.items;\r\n      this.store.dispatch(addSearchItems({ data }));\r\n      this.cacheItems[dataForSearch] = searchData.items;\r\n      localStorage.setItem('youtube-app-cache-items', JSON.stringify(this.cacheItems));\r\n      this.tempItems();\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { SearchItem } from '../models/search-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SortingService {\r\n  private viewsSortingOrder: string;\r\n  private publishedAtSortingOrder: string;\r\n  private filterSentence: string;\r\n  public items: SearchItem[];\r\n  public tempItems: SearchItem[];\r\n\r\n  public handleViewsSortingOrderChange(viewsSortingOrder: string): void {\r\n    this.viewsSortingOrder = viewsSortingOrder;\r\n    if (this.viewsSortingOrder === 'increasing') {\r\n      this.items.sort((a, b) => Number(a.statistics.viewCount) - Number(b.statistics.viewCount));\r\n      if (!this.filterSentence) this.tempItems = this.items;\r\n    }\r\n    if (this.viewsSortingOrder === 'decreasing') {\r\n      this.items.sort((a, b) => Number(b.statistics.viewCount) - Number(a.statistics.viewCount));\r\n      if (!this.filterSentence) this.tempItems = this.items;\r\n    }\r\n  }\r\n\r\n  public handlePublishedAtSortingOrderChange(publishedAtSortingOrder: string): void {\r\n    this.publishedAtSortingOrder = publishedAtSortingOrder;\r\n    if (this.publishedAtSortingOrder === 'increasing') {\r\n      this.items.sort((a, b) => {\r\n        if (new Date(a.snippet.publishedAt) < new Date(b.snippet.publishedAt)) return -1;\r\n        if (new Date(a.snippet.publishedAt) > new Date(b.snippet.publishedAt)) return 1;\r\n        return 0;\r\n      });\r\n      if (!this.filterSentence) this.tempItems = this.items;\r\n    }\r\n    if (this.publishedAtSortingOrder === 'decreasing') {\r\n      this.items.sort((a, b) => {\r\n        if (new Date(a.snippet.publishedAt) > new Date(b.snippet.publishedAt)) return -1;\r\n        if (new Date(a.snippet.publishedAt) < new Date(b.snippet.publishedAt)) return 1;\r\n        return 0;\r\n      });\r\n      if (!this.filterSentence) this.tempItems = this.items;\r\n    }\r\n  }\r\n\r\n  public filterBySentence(filterSentence: string): void {\r\n    this.filterSentence = filterSentence;\r\n    const re = new RegExp(this.filterSentence, 'i');\r\n    this.items = this.tempItems.filter(el => el.snippet.title.match(re));\r\n    const sortingButtons: NodeListOf < HTMLElement > | null = document.querySelectorAll('.header__sorting-button');\r\n    if (window.getComputedStyle(sortingButtons[0]).textDecoration.slice(0, 9) === 'underline') {\r\n      this.handlePublishedAtSortingOrderChange(this.publishedAtSortingOrder);\r\n    }\r\n    if (window.getComputedStyle(sortingButtons[1]).textDecoration.slice(0, 9) === 'underline') {\r\n      this.handleViewsSortingOrderChange(this.viewsSortingOrder);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MainGuard } from './guards/main.guard';\r\n\r\nimport { SearchResultsComponent } from './pages/main/search-results/search-results.component';\r\nimport { DetailedComponent } from './pages/main/detailed/detailed.component';\r\n\r\nconst youtubeRoutes: Routes = [\r\n  {\r\n    path: 'main',\r\n    component: SearchResultsComponent,\r\n    canActivate: [MainGuard],\r\n  },\r\n  { path: 'main/:id/detailed', component: DetailedComponent, canActivate: [MainGuard] },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(youtubeRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class YoutubeRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { YoutubeRoutingModule } from './youtube-routing.module';\r\n\r\nimport { HttpInterceptorService } from './services/http-interceptor.service';\r\n\r\nimport { SearchItemComponent } from './pages/main/search-item/search-item.component';\r\nimport { SearchResultsComponent } from './pages/main/search-results/search-results.component';\r\nimport { DetailedComponent } from './pages/main/detailed/detailed.component';\r\nimport { GetBorderColorDirective } from './directives/get-border-color.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SearchItemComponent,\r\n    SearchResultsComponent,\r\n    DetailedComponent,\r\n    GetBorderColorDirective,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    YoutubeRoutingModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpInterceptorService,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class YoutubeModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"names":["HttpParams","debounceTime","mergeMap","map","Subject","addSearchItems","Settings","SearchingService","constructor","sortingService","httpClient","store","localStorage","getItem","cacheItems","JSON","parse","keyInput$","pipe","subscribe","dataForSearch","mergeMapSearch","handleSearch","items","tempItems","next","sortingButtons","document","querySelectorAll","length","forEach","elem","style","textDecoration","get","params","set","maxResults","response","searchData","dataForSecondRequest","el","index","id","videoId","data","dispatch","setItem","stringify","i0","factory","providedIn"],"sourceRoot":"webpack:///"}